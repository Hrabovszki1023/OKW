digraph "okw.core.IOKW_State"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{okw.core.IOKW_State\n||+ BeginTest()\l+ ClickOn()\l+ DoubleClickOn()\l+ EndTest()\l+ LogCaption()\l+ LogExists()\l+ LogHasFocus()\l+ LogIsActive()\l+ LogLabel()\l+ LogPlaceholder()\l+ LogSelected()\l+ LogTablecellValue()\l+ LogTooltip()\l+ LogValue()\l+ MemorizeCaption()\l+ MemorizeExists()\l+ MemorizeHasFocus()\l+ MemorizeIsActive()\l+ MemorizeLabel()\l+ MemorizePlaceholder()\lund 56 mehr ...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="IOKW_State ist die Schnittstelle der OKW-Klasse."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{okw.core.Core\n|# NOK_Reason\l- CurrentState\l- Log\l- VerifyFail\l- LM\l|+ getVerifyFail()\l+ setVerifyFail()\l+ getNOK_Reason()\l+ setNOK_Reason()\l+ SetCoreStateNOK()\l+ SetCoreStateOK()\l+ setLanguage()\l+ Core()\l+ BeginTest()\l+ ClickOn()\l+ DoubleClickOn()\l+ EndTest()\l+ LogExists()\l+ LogHasFocus()\l+ LogIsActive()\l+ LogSelected()\l+ LogTablecellValue()\l+ LogTooltip()\l+ LogCaption()\l+ LogLabel()\lund 63 mehr ...\l+ Init()\l# readVersionTxt()\l- SetCurrentState()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classokw_1_1core_1_1_core.html",tooltip="Hier Statediagram..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{okw.core.NOK\n|- AL\l- Log\l- _Kernel\l|+ NOK()\l+ BeginTest()\l+ EndTest()\l+ ClickOn()\l+ DoubleClickOn()\l+ LogCaption()\l+ LogExists()\l+ LogHasFocus()\l+ LogIsActive()\l+ LogLabel()\l+ LogPlaceholder()\l+ LogSelected()\l+ LogTablecellValue()\l+ LogTooltip()\l+ LogValue()\l+ MemorizeCaption()\l+ MemorizeExists()\l+ MemorizeHasFocus()\l+ MemorizeIsActive()\l+ MemorizeLabel()\lund 57 mehr ...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classokw_1_1core_1_1_n_o_k.html",tooltip="Klasse NOK representiert den Core Zustand NOK im AusfÃ¼hrungs-Modus."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{okw.core.OK\n|# VerifyFail\l- myOKW_Properties\l- _Kernel\l- CL\l- Log\l- LM\l- CO\l- MEM\l|+ OK()\l+ BeginTest()\l+ EndTest()\l+ ClickOn()\l+ DoubleClickOn()\l+ LogCaption()\l+ LogExists()\l+ LogHasFocus()\l+ LogIsActive()\l+ LogLabel()\l+ LogPlaceholder()\l+ LogSelected()\l+ LogTablecellValue()\l+ LogTooltip()\l+ LogValue()\l+ MemorizeCaption()\l+ MemorizeExists()\l+ MemorizeHasFocus()\l+ MemorizeIsActive()\l+ MemorizeLabel()\lund 57 mehr ...\l# handleException()\l# logException()\l- verification()\l- verification()\l- verification()\l- verificationWCM()\l- verificationREGX()\l- verify()\l- verify()\l- verify()\l- verifyWCM()\l- verifyREGX()\l- verify()\l- verifyWCM()\l- verifyREGX()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classokw_1_1core_1_1_o_k.html",tooltip="Klasse OK representiert den Core Zustand OK."];
}

digraph "okw.parser.Parser"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{okw.parser.Parser\n||+ ParseMe()\l+ ParseMe()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{okw.parser.antlr4.OKW\l_Parser\n|+ KLAMMERZU\l+ tokenNames\l+ RULE_root\l+ ruleNames\l+ _serializedATN\l+ _ATN\l~ ENVVAL\l~ WS\l~ FOLDER_LOGMESSAGES\l~ FILE_OKW_KEYMAPS_XML\l~ FILE_OKW_MEMORIZE_XML\l~ FOLDER_XML\l~ FILE_OKW_CONST_XML\l~ VALUE\l~ TEXT\l~ FILE_OKW_INI_XML\l~ KEYVALUE\l~ FILE_OKW_IMPLEMENTATIONMATRIX_XML\l~ KLAMMERAUF\l~ KEYPREFIX\l~ FILE_OKW_DOCU_XML\l~ RULE_okw_internal_var\l~ RULE_okw_typekey\l~ RULE_keyvalue\l~ RULE_okw_env_var\l~ RULE_envvalue\l~ RULE_text\l# _decisionToDFA\l# _sharedContextCache\l|+ getGrammarFileName()\l+ getTokenNames()\l+ getRuleNames()\l+ getSerializedATN()\l+ getATN()\l+ OKW_Parser()\l+ root()\l+ okw_internal_var()\l+ okw_typekey()\l+ keyvalue()\l+ okw_env_var()\l+ envvalue()\l+ text()\l~ [static initializer]()\l~ [static initializer]()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classokw_1_1parser_1_1antlr4_1_1_o_k_w___parser.html"];
}
